package _46

import (
	"reflect"
	"testing"
)

func Test_permute(t *testing.T) {
	type args struct {
		nums []int
	}
	tests := []struct {
		name    string
		args    args
		wantRes [][]int
	}{
		//{"t1", args{nums: []int{1, 2, 3}}, [][]int{
		//	{1, 2, 3},
		//	{1, 3, 2},
		//	{2, 1, 3},
		//	{2, 3, 1},
		//	{3, 1, 2},
		//	{3, 2, 1},
		//}},
		{
			"t2",
			args{nums: []int{5, 4, 6, 2}},
			[][]int{
				// [[5,4,6,2],[5,4,2,6],[5,6,4,2],[5,6,2,4],[5,2,4,6],[5,2,6,4],
				// [4,5,6,2],[4,5,2,6],[4,6,5,2], [4,6,2,5],[4,2,5,6],[4,2,6,5],
				// [6,5,4,2],[6,5,2,4], [6,4,5,2],[6,4,2,5],[6,2,5,4],[6,2,4,5],
				// [2,5,4,6], [2,5,6,4],[2,4,5,6],[2,4,6,5],[2,6,5,4],[2,6,4,5]]
				{5, 4, 6, 2}, {5, 4, 2, 6}, {5, 6, 4, 2}, {5, 6, 2, 4}, {5, 2, 4, 6}, {5, 2, 6, 4},
				{4, 5, 6, 2}, {4, 5, 2, 6}, {4, 6, 5, 2}, {4, 6, 2, 5}, {4, 2, 5, 6}, {4, 2, 6, 5},
				{6, 5, 4, 2}, {6, 5, 2, 4}, {6, 4, 5, 2}, {6, 4, 2, 5}, {6, 2, 5, 4}, {6, 2, 4, 5},
				{2, 5, 4, 6}, {2, 5, 6, 4}, {2, 4, 5, 6}, {2, 4, 6, 5}, {2, 6, 5, 4}, {2, 6, 4, 5},
			},
		},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if gotRes := permute(tt.args.nums); !reflect.DeepEqual(gotRes, tt.wantRes) {
				t.Errorf("\npermute() = %v, \nwant   =    %v", gotRes, tt.wantRes)
			}
		})
	}
}
